# Global Options Block
{
	email alexandre.marcondes@gmail.com

	debug

	log http.log.access {
		include http.log.access

		output stdout

		# Sample: {"request": {"remote_ip": "172.25.0.1", "remote_port": "59966", "proto": "HTTP/1.1", "method": "GET", "host": "127.0.0.1", "uri": "/admin/resources/clients", "headers": {"Cache-Control": ["max-age=0"], "Dnt": ["1"], "User-Agent": ["Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36"], "Sec-Fetch-Mode": ["navigate"], "Sec-Fetch-User": ["?1"], "Cookie": [], "Upgrade-Insecure-Requests": ["1"], "Sec-Fetch-Site": ["same-origin"], "Sec-Fetch-Dest": ["document"], "Referer": ["http://127.0.0.1/admin/resources/clients/1/edit"], "Accept-Encoding": ["gzip, deflate, br"], "Connection": ["keep-alive"], "Sec-Ch-Ua": ["\"Not_A Brand\";v=\"99\", \"Google Chrome\";v=\"109\", \"Chromium\";v=\"109\""], "Sec-Ch-Ua-Mobile": ["?0"], "Sec-Ch-Ua-Platform": ["\"macOS\""], "Accept-Language": ["en-US"], "Accept": ["text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"]}}, "user_id": "", "duration": "95.027816ms", "size": 43025, "status": 200, "resp_headers": {"Date": ["Wed, 11 Jan 2023 15:23:19 GMT"], "Expires": ["Fri, 01 Jan 1990 00:00:00 GMT"], "Server": ["Caddy", "nginx"], "Set-Cookie": [], "Cache-Control": ["max-age=0, must-revalidate, no-cache, no-store, private"], "X-Powered-By": ["PHP/8.2.1"], "Content-Type": ["text/html; charset=UTF-8"], "X-Frame-Options": ["SAMEORIGIN"], "X-Content-Type-Options": ["nosniff"], "Pragma": ["no-cache"]}}

		# {request>remote_ip} - {request>user_id} [{ts}] "{request>method} {request>uri} {request>proto}" {status} {size} "{request>headers>Referer>[0]}" "{request>headers>User-Agent>[0]}"
		format transform "📡	[94m[1m{level}[0m	{logger}			[90mcommon log		[96m[1m{request>headers>X-Forwarded-For>[0]:request>remote_ip}[0m
			request:		[90m\"[33m{request>method} [92m{request>host}{request>uri} [32m{request>proto}[90m\" [37m[1m{status}[0m [90m{size} [90m{duration}[0m
			referer:		[94m{request>headers>Referer>[0]:error}[0m
			user agent:		[90m{request>headers>User-Agent>[0]}[0m
			headers:		[90m{request>headers}[0m" {
			time_format common_log # "02/Jan/2006:15:04:05 -0700"
			duration_format string
			level_format upper
		}
	}

	log http.log.error {
		include http.log.error

		output stdout

		# Sample: {"level":"DEBUG","ts":"12/Jan/2023:17:35:08 +0000","logger":"http.log.error","msg":"dial tcp: lookup video-gateway on 127.0.0.11:53: no such host","request":{"remote_ip":"172.25.0.1","remote_port":"55474","proto":"HTTP/1.1","method":"GET","host":"127.0.0.1","uri":"/streams/db0io1ShQvvb/092e52ef-522d-47cf-909b-da92547f45d8/stream.m3u8","headers":{"Cache-Control":["max-age=0"],"Accept-Language":["en-US"],"Sec-Fetch-Dest":["document"],"Accept-Encoding":["gzip, deflate, br"],"Connection":["keep-alive"],"Sec-Ch-Ua-Mobile":["?0"],"Sec-Ch-Ua-Platform":["\"macOS\""],"Sec-Fetch-Mode":["navigate"],"If-None-Match":["\"637ce970-b0cc\""],"If-Modified-Since":["Tue, 22 Nov 2022 15:23:28 GMT"],"Sec-Ch-Ua":["\"Not_A Brand\";v=\"99\", \"Google Chrome\";v=\"109\", \"Chromium\";v=\"109\""],"Dnt":["1"],"User-Agent":["Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36"],"Sec-Fetch-User":["?1"],"Upgrade-Insecure-Requests":["1"],"Accept":["text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"],"Sec-Fetch-Site":["none"],"Cookie":[]}},"duration":"8.526207ms","status":502,"err_id":"1d3mb1zvi","err_trace":"reverseproxy.statusError (reverseproxy.go:1272)"}

		format transform "⛔️	[94m[1m{level}[0m	{logger}			[37m[1m{msg} [96m{status}[0m [90m{duration}[0m
			error id:		[90m{err_id}[0m
			trace:			[94m{err_trace}[0m
			[90m{ }[0m" {
			time_format common_log # "02/Jan/2006:15:04:05 -0700"
			duration_format string
			level_format upper
		}
	}

	log http.log {
		include http.log

		exclude http.log.access
		exclude http.log.error

		output stdout

		format transform "⚙️	[94m[1m{level}[0m	{logger}			[37m[1m{msg}[0m
			[90m{ }[0m" {
			time_format common_log # "02/Jan/2006:15:04:05 -0700"
			duration_format string
			level_format upper
		}
	}

	log http.handlers.reverse_proxy {
		include http.handlers.reverse_proxy

		output stdout

		# Sample: {"level":"debug","ts":"11/Jan/2023:15:32:26 +0000","logger":"http.handlers.reverse_proxy","msg":"upstream roundtrip","upstream":"sr-admin-gui:80","duration":"64.940452ms","request":{"remote_ip":"172.25.0.1","remote_port":"59372","proto":"HTTP/1.1","method":"GET","host":"127.0.0.1","uri":"/admin/resources/clients","headers":{"X-Forwarded-For":["172.25.0.1"],"Sec-Fetch-Dest":["document"],"Upgrade-Insecure-Requests":["1"],"Cookie":[],"X-Real-Ip":["172.25.0.1:59372"],"Accept-Encoding":["gzip, deflate, br"],"X-Forwarded-Proto":["http"],"Sec-Ch-Ua-Mobile":["?0"],"Referer":["http://127.0.0.1/admin/resources/clients/1/edit"],"Sec-Fetch-Mode":["navigate"],"Accept-Language":["en-US"],"Sec-Fetch-Site":["same-origin"],"User-Agent":["Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36"],"Sec-Ch-Ua":["\"Not_A Brand\";v=\"99\", \"Google Chrome\";v=\"109\", \"Chromium\";v=\"109\""],"X-Forwarded-Host":["127.0.0.1"],"Cache-Control":["max-age=0"],"Accept":["text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"],"Sec-Fetch-User":["?1"],"Dnt":["1"],"Sec-Ch-Ua-Platform":["\"macOS\""]}},"headers":{"Cache-Control":["max-age=0, must-revalidate, no-cache, no-store, private"],"Server":["nginx"],"Date":["Wed, 11 Jan 2023 15:32:26 GMT"],"Set-Cookie":[],"X-Content-Type-Options":["nosniff"],"Connection":["keep-alive"],"Content-Type":["text/html; charset=UTF-8"],"X-Powered-By":["PHP/8.2.1"],"Pragma":["no-cache"],"X-Frame-Options":["SAMEORIGIN"],"Expires":["Fri, 01 Jan 1990 00:00:00 GMT"]},"status":200}
		# Sample: {"level":"DEBUG","ts":"12/Jan/2023:18:29:19 +0000","logger":"http.handlers.reverse_proxy","msg":"upstream roundtrip","upstream":"http.cat:443","duration":"191.873167ms","request":{"remote_ip":"172.25.0.1","remote_port":"63530","proto":"HTTP/1.1","method":"GET","host":"http.cat:443","uri":"/502","headers":{"User-Agent":["curl/7.85.0"],"Accept":["*/*"],"X-Forwarded-For":["172.25.0.1"],"X-Forwarded-Proto":["http"],"X-Forwarded-Host":["127.0.0.1"]}},"headers":{"Cf-Cache-Status":["HIT"],"Vary":["Accept-Encoding"],"Nel":["{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"],"Server":["cloudflare"],"Date":["Thu, 12 Jan 2023 18:29:19 GMT"],"Last-Modified":["Tue, 22 Nov 2022 15:23:28 GMT"],"Etag":["\"637ce970-b0cc\""],"Cache-Control":["max-age=315360000"],"Accept-Ranges":["bytes"],"Report-To":["{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=obRZMojiMhp1BSo9%2BoTSvO2rGhx9a9gzrBPS0o0Rpy7hGEbRoDtx%2FuvN5ySNXFWUtxxKypKkPfwX6nG5AatR9r4M22BwwsIR3SwWzUmH9jCJon1g%2FnZuK8GR6S3GQT8%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"],"Cf-Ray":["7887f4fcad2c6d91-MUC"],"Alt-Svc":["h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400"],"Age":["4064"],"Content-Type":["image/jpeg"],"Content-Length":["45260"],"Expires":["Thu, 31 Dec 2037 23:55:55 GMT"]},"status":200}
		# Sample: {"level":"DEBUG","ts":"12/Jan/2023:18:29:19 +0000","logger":"http.handlers.reverse_proxy","msg":"selected upstream","dial":"http.cat:443","total_upstreams":1}

		format transform "🔛	[94m[1m{level}[0m	{logger}	[37m[1m{msg}[0m	[96m[1m{request>headers>X-Forwarded-For>[0]:request>remote_ip}[0m [37m[1m➜[0m [90m{dial:upstream}[0m
			request:		[90m\"[33m{request>method} [92m{request>host}{request>uri} [32m{request>proto}[90m\" [37m[1m{status}[0m [90m{size} [90m{duration:total_upstreams}[0m
			referer:		[94m{request>headers>Referer>[0]:error}[0m
			user agent:		[90m{request>headers>User-Agent>[0]}[0m
			headers:		[90m{headers}[0m" {
			time_format common_log # "02/Jan/2006:15:04:05 -0700"
			duration_format string
			level_format upper
		}
	}

	log http.handlers.rewrite {
		include http.handlers.rewrite

		output stdout

		# Sample: {"level":"DEBUG","ts":"12/Jan/2023:17:40:00 +0000","logger":"http.handlers.rewrite","msg":"rewrote request","request":{"remote_ip":"172.25.0.1","remote_port":"60764","proto":"HTTP/1.1","method":"GET","host":"127.0.0.1","uri":"/streams/db0io1ShQvvb/092e52ef-522d-47cf-909b-da92547f45d8/stream.m3u8","headers":{"Cache-Control":["max-age=0"],"Dnt":["1"],"Upgrade-Insecure-Requests":["1"],"Cookie":[],"Connection":["keep-alive"],"Accept":["text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"],"Sec-Fetch-Mode":["navigate"],"Sec-Ch-Ua":["\"Not_A Brand\";v=\"99\", \"Google Chrome\";v=\"109\", \"Chromium\";v=\"109\""],"Sec-Ch-Ua-Mobile":["?0"],"Accept-Language":["en-US"],"User-Agent":["Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36"],"Accept-Encoding":["gzip, deflate, br"],"If-None-Match":["\"637ce970-b0cc\""],"Sec-Ch-Ua-Platform":["\"macOS\""],"Sec-Fetch-Site":["none"],"Sec-Fetch-User":["?1"],"Sec-Fetch-Dest":["document"],"If-Modified-Since":["Tue, 22 Nov 2022 15:23:28 GMT"]}},"method":"GET","uri":"/502"}

		format transform "📝	[94m[1m{level}[0m	{logger}		[37m[1m{msg}[0m 	[96m[1m{request>headers>X-Forwarded-For>[0]:request>remote_ip}[0m
			[90m\"[33m{request>method} [92m{request>host}{request>uri} [32m{request>proto}[90m\" [37m[1m➜[0m [90m\"[33m{method} [92m{request>host}{uri}[90m\"[0m" {
			time_format common_log # "02/Jan/2006:15:04:05 -0700"
			duration_format string
			level_format upper
		}
	}

	log http.stdlib {
		include http.stdlib

		output stdout

		format json {
			#format transform "⚙️	[94m[1m{level}[0m	{logger}				[37m[1m{msg}[0m
			#	[90m{ }[0m" {
			time_format common_log # "02/Jan/2006:15:04:05 -0700"
			duration_format string
			level_format upper
		}
	}

	log http {
		include http

		exclude http.log
		exclude http.stdlib
		exclude handlers.reverse_proxy
		exclude handlers.rewrite

		output stdout

		format transform "⚙️	[94m[1m{level}[0m	{logger}				[37m[1m{msg}[0m
			[90m{ }[0m" {
			time_format common_log # "02/Jan/2006:15:04:05 -0700"
			duration_format string
			level_format upper
		}
	}

	log tls.cache.maintenance {
		include tls.cache.maintenance

		output stdout

		format transform "🔐	[94m[1m{level}[0m	{logger}		[37m[1m{msg}[0m [33m{cache:error}[0m
			[90m{ }[0m" {
			time_format iso8601 # "2006-01-02T15:04:05.000Z0700"
			duration_format string
			level_format upper
		}
	}

	log tls.cache {
		include tls.cache

		exclude tls.cache.maintenance

		output stdout

		format transform "🔐	[94m[1m{level}[0m	{logger}			[37m[1m{msg}[0m
			subjects:		[90m{subjects}[0m
			expiration:		[90m{expiration}[0m
			managed:		[90m{managed} {issuer_key}[0m
			hash:			[94m{hash}[0m
			cache size:		[90m{cache_size}/{cache_capacity}[0m
			[90m{ }[0m" {
			time_format iso8601 # "2006-01-02T15:04:05.000Z0700"
			duration_format string
			level_format upper
		}
	}

	log tls.renew {
		include tls.renew

		output stdout

		format transform "🔐	[94m[1m{level}[0m	{logger}			[37m[1m{msg}[0m [33m{error}[0m
			identifier:		[90m{identifier}[0m
			[90m{ }[0m" {
			time_format iso8601 # "2006-01-02T15:04:05.000Z0700"
			duration_format string
			level_format upper
		}
	}

	log tls.handshake {
		include tls.handshake

		output stdout

		format transform "🤝	[94m[1m{level}[0m	{logger}			[37m[1m{msg}[0m [33m{error}[0m
			identifier:		[33m{identifier:sni}[0m
			remote:		[93m{remote_ip}:{remote_port}[0m
			server:		[94m{server_name}[0m
			cipher:		[90m{cipher_suites}[0m
			cert_cache:		[90m{cert_cache_fill}[0m
			should_load:		[90m{load_if_necessary}[0m
			should_obtain_		[90m{obtain_if_necessary}[0m
			on_demand:		[90m{on_demand}[0m
			[90m{ }[0m" {
			time_format iso8601 # "2006-01-02T15:04:05.000Z0700"
			duration_format string
			level_format upper
		}
	}

	log tls {
		include tls

		exclude tls.cache
		exclude tls.renew
		exclude tls.handshake

		output stdout

		format transform "🔐	[94m[1m{level}[0m	{logger}				[37m[1m{msg}[0m [33m{error}[0m
			identifiers:		[90m{identifiers}[0m
			[90m{ }[0m" {
			time_format iso8601 # "2006-01-02T15:04:05.000Z0700"
			duration_format string
			level_format upper
		}
	}

	log pki.ca.local {
		include pki.ca.local

		output stdout

		format transform "🔐	[94m[1m{level}[0m	{logger}			[37m[1m{msg}[0m [33m{error}[0m
			path:		[90m{path}[0m
			[90m{ }[0m" {
			time_format iso8601 # "2006-01-02T15:04:05.000Z0700"
			duration_format string
			level_format upper
		}
	}

	log events {
		include events

		output stdout
		format transform "🎉	[94m[1m{level}[0m	{logger}				[37m[1m{msg}[0m [33m{name}[0m
			id:			[90m{id}[0m
			origin:			[94m{origin}[0m
			data:			[93m{data}[0m
			[90m{ }[0m" {
			time_format iso8601 # "2006-01-02T15:04:05.000Z0700"
			duration_format string
			level_format upper
		}
	}

	log admin.api {
		include admin.api

		output stdout

		format transform "💼	[94m[1m{level}[0m	{logger}	[37m[1m{msg}[0m [90m{address}[0m
			[90m{ }[0m" {
			time_format iso8601 # "2006-01-02T15:04:05.000Z0700"
			duration_format string
			level_format upper
		}
	}

	log admin {
		include admin

		exclude admin.api

		output stdout

		format transform "💼	[94m[1m{level}[0m	{logger}	[37m[1m{msg}[0m [90m{address}[0m
			[90m{ }[0m" {
			time_format iso8601 # "2006-01-02T15:04:05.000Z0700"
			duration_format string
			level_format upper
		}
	}

	log "" {
		include ""

		output stdout

		format transform "💼	[94m[1m{level}[0m	{logger}	[37m[1m{msg}[0m [90m{address}[0m
			[90m{ }[0m" {
			time_format iso8601 # "2006-01-02T15:04:05.000Z0700"
			duration_format string
			level_format upper
		}
	}

	log default {
		exclude ""
		exclude admin
		exclude admin.api
		exclude pki.ca.local
		exclude events
		exclude tls
		exclude http

		output stdout
		format json {
			#format transform "🖥️	[94m[1m{level}	[0m{logger}	[37m[1m{msg}[0m
			#[90m{ }[0m" {
			time_format iso8601 # "2006-01-02T15:04:05.000Z0700"
			duration_format string
			level_format upper
		}
	}
}

{$SR_PROTO:http}://localhost:{$SR_PORT:8000} {
	redir {$SR_PROTO:http}://{$SR_ADDRESS:127.0.0.1}:{$APP_PORT:80}
}

{$SR_TLS_PROTO:https}://localhost:{$SR_TLS_PORT:8443} {
	redir {$SR_TLS_PROTO:https}://{$SR_ADDRESS:127.0.0.1}:{$APP_TLS_PORT:443}
}

{$SR_PROTO:http}://{$SR_ADDRESS:127.0.0.1}:{$SR_PORT:8000} {
	log

	rewrite /streams /streams/
	rewrite /admin /admin/
	rewrite /sanctum /sanctum/
	rewrite /livewire /livewire/
	rewrite /i /i/
	rewrite /api /api/

	handle_path /streams/* {
		reverse_proxy http://video-gateway:80 {
			header_up X-Real-IP {remote}
		}
	}

	@admin-panel {
		path /sanctum/*
		path /livewire/*
		path /i/*
		path /admin/*
		path /api/*
	}

	handle @admin-panel {
		reverse_proxy http://sr-admin-gui:80 {
			header_up X-Real-IP {remote}
		}
	}

	@debug expression `{$DEBUG:false}`
	@production expression `!{$DEBUG:false}`

	handle @debug {
		rewrite / /debug
		try_files {path} /{path}.html
		file_server
	}

	handle @production {
		respond */debug 404
		respond */debug.* 404
		respond */debug/* 404

		rewrite / /index
		try_files {path} /{path}.html
		file_server
	}

	#	respond /api/tokens/* "Access denied" 403 {
	#	    close
	#    }

	handle_errors {
		rewrite * /{err.status_code}
		reverse_proxy https://http.cat {
			header_up Host {upstream_hostport}
		}
	}
}
